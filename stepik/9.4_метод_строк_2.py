# Метод count()
# Метод count(<sub>, <start>, <end>) считает количество непересекающихся вхождений подстроки <sub> в исходную строку s.

# Результатом выполнения следующего кода:
#sub это искомая часть строки

print('------ Метод count()--------'*2)

s = 'foo goo moo'
print(s.count('oo')) # все количество
print(s.count('oo', 0, 8))  # подсчет с 0 по 7 символ

# Метод startswith()
# Метод startswith(<suffix>, <start>, <end>) определяет, 
# начинается ли исходная строка s подстрокой <suffix>.'
# Если исходная строка начинается с подстроки <suffix>, 
# метод возвращает значение True, а если нет, то  False.

# Результатом выполнения следующего кода:
print('------ Метод startswith()--------'*2)
s = 'foobar'
print(s.startswith('foo'))
print(s.startswith('baz'))


# Метод endswith()
# Метод endswith(<suffix>, <start>, <end>) определяет,
# оканчивается ли исходная строка s подстрокой <suffix>. 
# Метод возвращает значение True если исходная строка оканчивается на подстроку <suffix> и False в противном случае.

# Результатом выполнения следующего кода:
print('------ Метод startswith()--------'*2)
s = 'foobar'
print(s.endswith('bar'))
print(s.endswith('baz'))


# Методы find(), rfind()

# Метод find(<sub>, <start>, <end>) находит индекс первого вхождения подстроки <sub> в исходной строке s.
# Если строка s не содержит подстроки <sub>, то метод возвращает значение -1. 
# Мы можем использовать данный метод наравне с оператором in для проверки:
# содержит ли заданная строка некоторую подстроку или нет.

# Метод rfind(<sub>, <start>, <end>) идентичен методу find(<sub>, <start>, <end>),
# за тем исключением, что он ищет первое вхождение подстроки <sub> начиная с конца строки s.

# Результатом выполнения следующего кода:
print('------  Методы find()-------'*2)
s = 'foo bar foo baz foo qux'
print(s.find('foo'))
print(s.find('bar'))
print(s.find('qu'))
print(s.find('python'))

# Метод strip()
# Метод strip() возвращает копию строки s у которой удалены все пробелы стоящие в начале и конце строки.

# Результатом выполнения следующего кода:
print('------  Метод strip()-------'*2)
s = '     foo bar foo baz foo qux      '
print(s.strip())

# Метод lstrip()
# Метод lstrip() возвращает копию строки s у которой удалены все пробелы стоящие в начале строки.

# Результатом выполнения следующего кода:
print('------ Метод lstrip()-------'*2)
s = '     foo bar foo baz foo qux      '
print(s.lstrip())


# етод rstrip()
# Метод rstrip() возвращает копию строки s у которой удалены все пробелы стоящие в конце строки.

# Результатом выполнения следующего кода:
print('------ Метод rstrip()------'*2)
s = '      foo bar foo baz foo qux      '
print(s.rstrip())


# Метод replace()
# Метод replace(<old>, <new>) возвращает копию s со всеми вхождениями подстроки <foo>, замененными на <grault>.

# Результатом выполнения следующего кода:
print('------ 1 Метод replace()------'*2)
s = 'foo bar foo baz foo qux'
print(s.replace('foo', 'grault')) # меняет все foo


# Метод replace()
# может принимать опциональный третий аргумент <count>,  который определяет количество замен.

# Результатом выполнения следующего кода:
print('------2 Метод replace()------'*2)
s = 'foo bar foo baz foo qux'
print(s.replace('foo', 'grault', 2))#меняет только 2 foo



print('-1-'*30)

# s = 'I learn Python language. Python - awesome!'
# print(s.find('Python'))

print('-2-'*30)

# На вход программе подается строка текста, состоящая из слов,
# разделенных ровно одним пробелом. Напишите программу,
# которая подсчитывает количество слов в ней.

# st = 'In 2010, someone paid 10k Bitcoin for two pizzas.'

# print(st.count(' ')+1)

print('-3-'*30)
       
# На вход программе подается строка генетического кода, состоящая из букв А (аденин), 
# Г (гуанин), Ц (цитозин), Т (тимин). Напишите программу, которая подсчитывает сколько аденина,
# гуанина, цитозина и тимина входит в данную строку генетического кода.


# st = input().lower() #АааГГЦЦцТТттт
# a = 0
# g = 0
# c = 0
# t = 0
# for i in range(len(st)):
#     if i == 'а':
#         a +=1
#     if i == 'г':
#         g +=1
#     if i == 'ц':
#         c +=1
#     if i == 'т':
#         t +=1    

# print('Аденин: ',a)

# print('Гуанин: ',g)

# print('Цитозин: ',c)

# print('Тимин: ',t)

print('-3-'*30)

# n = int(input())
# counter =0
# for i in range(n):
#     n_2 = input()
#     if n_2.count('11') >= 3:
#         counter +=1
# print(counter)

print('-4-'*30)

# На вход программе подается строка текста. Напишите программу,
# которая подсчитывает количество цифр в данной строке.

# st = ' 1029384756aaa1234567890   '

# st_1 = st.count('0')
# st_2 = st.count('1')
# st_3 = st.count('2')
# st_4 = st.count('3')
# st_5 = st.count('4')
# st_6 = st.count('5')
# st_7 = st.count('6')
# st_8 = st.count('7')
# st_9 = st.count('8')
# st_10 = st.count('9')

# print(st_1 + st_2+st_3+st_4+st_5+st_6+st_7+st_8+st_9 )

#st = ' 1029384756aaa1234567890   '
# coint = 0

# for i in range(10):
#     coint = coint + st.count(str(i))
        
# print(coint)

print('-5-'*30)

# На вход программе подается строка текста.
# Напишите программу, которая проверяет, 
# что строка заканчивается подстрокой .com или .ru.


# st = 'www.google.com'

#вариант 1

# if  st.endswith('.com') or st.endswith('.ru'):
#      print('YES')
# else:
#     print('NO')   

# Вариант 2
# st = 'www.google.com'

# flag = 'NO'

# if  st.endswith('.com') or st.endswith('.ru'):
#      flag = 'YES'

# print(flag) 

print('-6-'*30)

# На вход программе подается строка текста. 
# Напишите программу, которая выводит на экран символ, 
# который появляется наиболее часто.


# st = ' abaabbcffcccvv'
# coint = 0
# max_st = ''

# for  i in st:  # for идет по символам
    
#     if st.count(i) >= coint:
#         coint = st.count(i)
               
      
#         max_st = i

# print(max_st)
 
print('-7-'*30)

#    На вход программе подается строка текста.
# Если в этой строке буква «f» встречается только один раз,
# выведите её индекс. Если она встречается два и более раза, 
# выведите индексы её первого и последнего вхождения на одной строке, 
# разделенные символом пробела. 
# Если буква «f» в данной строке не встречается, следует вывести «NO». 

# st = 'abcfdeghafbc'

# if st.count('f') >= 2:
#     print(st.find('f'), end=' ')
#     print(st.rfind('f'))
# if st.count('f') == 1:
#     print(st.find('f'))

# if 'f' not in st:
#     print('NO')    

print('-8-'*30)

# На вход программе подается строка текста, в которой буква «h»
# встречается минимум два раза. Напишите программу,
# которая удаляет из этой строки первое и последнее вхождение буквы «h»,
# а также все символы, находящиеся между ними.

# st = 'ahahahahaha'

# if st.count('h') >=2:
#     print(st[0:st.find('h')],end=' ')
#     print(st[st.rfind('h') +1 : ])



