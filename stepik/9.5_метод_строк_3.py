

# Метод isalnum()

# определяет, состоит ли исходная строка из буквенно-цифровых символов. 
# Метод возвращает значение True если исходная строка является 
# непустой и состоит только из буквенно-цифровых символов и False 
# в противном случае.

print('------  Метод isalnum()------'*2)

s1 = 'abc123'
s2 = 'abc$*123'
s3 = ''

print(s1.isalnum())
print(s2.isalnum())
print(s3.isalnum())

# Метод isalpha()

# Метод isalpha() определяет, состоит ли исходная строка из буквенных символов. 
# Метод возвращает значение True если исходная строка является непустой и состоит 
# только из буквенных символов и False в противном случае.

print('------  Метод isalpha()------'*2)

s1 = 'ABCabc'
s2 = 'abc123'
s3 = ''

print(s1.isalpha())
print(s2.isalpha())
print(s3.isalpha())



# Метод isdigit()

# Метод isdigit() определяет, состоит ли исходная строка только из цифровых символов.
# Метод возвращает значение True если исходная строка является непустой и состоит только 
# из цифровых символов и False в противном случае.

print('------ Метод isdigit()------'*2)

s1 = '1234567'
s2 = 'abc123'
s3 = ''

print(s1.isdigit())
print(s2.isdigit())
print(s3.isdigit())




# Метод islower()

# Метод islower() определяет, являются ли все буквенные символы исходной строки строчными 
# (имеют нижний регистр). Метод возвращает значение True если все буквенные символы исходной 
# строки являются строчными и False в противном случае. Все неалфавитные символы игнорируются!

print('------Метод islower() ------'*2)

s1 = 'abc'
s2 = 'abc1$d'
s3 = 'Abc1$D'

print(s1.islower())
print(s2.islower())
print(s3.islower())

print('------ Метод isupper()------'*2)

# Метод isupper()

# Метод isupper() определяет, являются ли все буквенные символы исходной 
# строки заглавными (имеют верхний регистр). Метод возвращает значение True
# если все буквенные символы исходной строки являются заглавными и False в 
# противном случае. Все неалфавитные символы игнорируются!

print('------ Метод isupper()------'*2)

s1 = 'ABC'
s2 = 'ABC1$D'
s3 = 'Abc1$D'

print(s1.isupper())
print(s2.isupper())
print(s3.isupper())


# Метод isspace()

# Метод isspace() определяет, состоит ли исходная строка только
# из пробельных символов. Метод возвращает значение True если строка 
# состоит только из пробельных символов и False в противном случае.

print('------Метод isspace() ------'*2)

s1 = '       '
s2 = 'abc1$d'

print(s1.isspace())
print(s2.isspace())


print('-1-'*30)

# никнейм должен начинаться с символа @
# никнейм должен содержать от 5 до  15 (включительно) символов
# никнейм может содержать только строчные буквы и цифры (помимо первого символа @)



# nikname = '@efereg12'

# if nikname[0] == '@' and 5<= len(nikname) <=15 and nikname == nikname.lower() and nikname[1:].isalnum():
#     print('Correct')
# else:
#     print('Incorrect')

print('-2-'*30)

# Программа должна принимать на вход натуральное число n, а затем 
# n строк, представляющих тексты комментариев. Для каждого комментария ваша программа 
# должна выводить номер этого комментария (начиная с 1), затем двоеточие (:),
# затем через пробел его текст или сообщение "COMMENT SHOULD BE DELETED" (без кавычек),
# если комментарий должен быть удален Сэмом.

# num = int(input())

# for i in range(1,num +1):
#     st = input()
    
#     if st == '' or st.isspace():
#         print(f'{i}: COMMENT SHOULD BE DELETED')
#     else:
#         print(f'{i}: {st}')
        

     
print('-3-'*30)  

# <БУКВА><ЦИФРА><ЦИФРА><ЦИФРА><БУКВА><БУКВА>_<ЦИФРА><ЦИФРА><ЦИФРА>
# где <ЦИФРА> – это любая цифра, а <БУКВА> – это одна из букв кириллицы "АВЕКМНОРСТУХ".


st = 'Р173УК_826'
#     0123456789

# flag = 'NO'

# word = 'АВЕКМНОРСТУХ'

# if 9 <= len(st) <=10:

#     letters = st[0] + st[4:6]  # буквы
   
#     digits = st[1:4]+ st[7:]   # цифры
  
#     mark = st[6]               # символ
   

#     if digits.isdigit() and mark == '_':
#         flag = "YES"

#     for i in letters:
     
#         if i not in word:
            
#             flag = 'NO'
#             break

# print(flag)







