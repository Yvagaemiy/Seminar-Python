print('-1-'*30)

# n = 4
# num= 0
# for i in range(1, n+1):
#     for j in range(1,i +1):
#         num +=1
#         print(num ,end=' ')
        
#     print()

print('-2-'*30)
# 1. главный цикл range(1, n+1)

# 2. вложенный for j in range(i):

# 3. выводим на печать print(j+1, end='')

# 4. второй вложенный цикл в первый, отступ как у первого вложенного цикла for k in range(i - 1, 0, -1):

# 5. выводим на печать  print(k, end='')

# Всем удачи, нас все меньше, но тем интереснее...

# n = 5


# for i in range(1, n +1):
#     for j in range(i):
#        print(j+1 , end=' ')
#     for k in range(i - 1 , 0 , -1):
#         print(k , end=' ')
#     print()  


# num = 5
# for i in range(1, num + 1):   # цикл отвечающий за количество рядов
#     count = 0                 # счетчик для ряда, при каждом новом цикле обнуляется
#     for j in range(i):        # 1й вложенный 
#         count += 1            # увеличиваем цифру в ряду
#         print(count, end='')  # вывод на печать без пробелов
#     for k in range(i, 1, -1): # 2й вложенный 
#         count -= 1            # уменьшаем цифру в ряду
#         print(count, end='')  # вывод на печать без пробелов
#     print()                   # переход на новую строку


print('-3-'*30)


# a = 1

# b = 100

# total_maximum = 0       # сумма делителей   

# didgitl = 0             # число с максимальной суммой делителей

# for i in range(a, b +1):
     
       
#         maximum = 0           # обнуление суммы делителей, для нового цикла
#         for j in range(1,i +1):
       
#             if i % j == 0:
                
#                 maximum += j
#                 print(maximum)
#             if   maximum >= total_maximum:
#                 total_maximum = maximum
#                 didgitl = j

# print(didgitl,total_maximum,end='')
            
            
print('-4-'*30)



# n = int(input())
# totl = 0
# for i in range(1, n+1):
#     print(i, end='')
#     for j in range(1, i +1):

#         if i % j == 0:
#             print('+',end='')
#     print()            


print('-5-'*30)

# На вход программе подается натуральное число 
# n. Напишите программу, которая находит цифровой корень данного числа. 
# Цифровой корень числа 
# n получается следующим образом: если сложить все цифры этого числа, 
# затем все цифры найденной суммы и повторять этот процесс до тех пор,
# пока в результате не будет получено однозначное число (цифра),
# которое и называется цифровым корнем изначального числа.

# n = int(input('введите число: '))

# while n > 9:
#     sum_num=0
    
#     while n !=0:
#          now_sum_num = n % 10
#          sum_num += now_sum_num
#          n = n //10
#     n = sum_num
# print(n)




print('-6-'*30)

# Дано натуральное число 
# �
# n. Напишите программу, которая выводит значение суммы 
# 1!+2!+3!+…+n!.

# factor = int(input())
# n = 1
# sum_factor = 0
# for i in range(1,factor+1): 
#     for j in range(1, i + 1):
#         n = j * n
#     sum_factor +=n
#     n = 1
# print(sum_factor)

# a = 2
# b = 15
# count = 0
# for i in range(a, b + 1):
#     for J in range(1, i + 1):
#         if i % J == 0:
#             count +=1
#     if count == 2 :
#         print(i)
#     count = 0
#

#экзамен
#Какое число нужно написать вместо многоточия, чтобы цикл выполнился ровно 7 раз?
# i = 6
# while i <= 10:
#     print ('Python!')
#     i += 1

#выводит факториал числа n

# n = int(input())
# res = 1
# i = 2
# while i <= n:
#     res *= i
#     i += 1
# print(res)

#выводит минимальный делитель числа, отличный от единицы
# n = int(input())
# i = 2
# while n % i != 0:
    
#     i += 1
# print(i)


# n = 5
# count = 0
# while n > 0:
#     count +=1
#     n = n //10
# #    count+=1
# print(count)  

# На обработку поступает натуральное число.
# Нужно написать программу, которая выводит
# на экран сумму четных цифр этого числа или 
# 0, если четных цифр в записи нет. 

# n = int(input())
# s = 0
# while n !=0:
#     if n % 2 == 0:
#         s += n % 10
#     n //= 10
# print(s)


 

# count = 0
# maximum = -10 **13
# for i in range(8):
#     x = int(input())
#     if x % 4 == 0:
#         count += 1
#         if x > maximum:
#             maximum = x
# if count != 0:
#     print(count)
#     print(maximum)
# else:
#      print('NO')

# На обработку поступает последовательность из 
# 4 целых чисел. Известно, что вводимые числа по абсолютной величине не превышают 
#  . Нужно написать программу, которая выводит на экран количество нечетных чисел 
# в исходной последовательности и максимальное нечетное число. Если нечетных чисел нет,
# требуется на экран вывести «NO».

# count = 0
# maximum = -10 ** 9
# for i in range(4):
#     x = int(input())
#     if x % 2 != 0:
#         count += 1
#         if x > maximum:
#             maximum = x
           
# if count != 0:
#     print(count)
#     print(maximum)
# else:
#     print('NO')
#


#На вход программе подается натуральное число n. Напишите программу, которая печатает звездную рамку размерами n×19.

# n = 5

# for i in range(1 , n +1):
#     if i == 1 or i == n:
#         print('*'* 19)
#     else:
#         print('*' + ' ' * 17 + '*')   #звездочки приплесовываем пробелы умноженные на 17 и плюс одну звезду 
   
#Дано натуральное число (n >99). Напишите программу, которая определяет его третью (с начала) цифру.


#n = int(input())

# while n >999:
#     n = n // 10
# print(n%10)


# Дано натуральное число. Напишите программу, которая вычисляет:

# количество цифр 3 в нем;
# сколько раз в нем встречается последняя цифра;
# количество четных цифр;
# сумму его цифр, больших пяти;
# произведение цифр, больших семи (если цифр больших семи нет, то вывести 1, 
# если такая цифра одна, то вывести ее);
# сколько раз в нем встречаются цифры 0 и 5 (всего суммарно).

# 

# a = 1

# b = 12

# c = 9

# d = 10



for a in range(1 , 33):
    for b in range(1 , 33):
        for c in range(1 , 33):
            for d in range(1 , 33):
                if a ** 3 + b ** 3 == c ** 3 + d ** 3 and a != c and b!=d and b != c and b !=d:
                    wold =a ** 3 + b ** 3
                    print(wold)