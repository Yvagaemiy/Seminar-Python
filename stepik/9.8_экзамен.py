print('-1-'*30)
# результате выполнения программы был 
# выведен четвертый символ строки s.

s = 'Python rocks!'
for i in range(0,len(s)):
  
    if i  == 3:
        print(s[i])
 
print('-2-'*30)

#  результате выполнения программы были
# выведены символы строки s со 2-го по 5-й включительно.


s = 'Python rocks!' 
print(s[1:5],end='')

print('-3-'*30)

# результате выполнения программы была выведена 
# строка s без ведущих и замыкающих пробельных символов.

s = '    Python rocks!     '
print(s.strip())


print('-4-'*30)

# результате выполнения программы была выведена
# строка s заглавными буквами (в верхнем регистре).


s = 'Python rocks!'
print(s.upper())

print('-5-'*30)
#  результате выполнения программы была выведена строка 
# s в которой символ «o» заменен на символ «@».

s = 'Python rocks!'
print(s.replace('o','@'))


print('-6-'*30)

#  Напишите программу, которая удаляет из нее все символы с индексами, 
# кратными 3, то есть символы с индексами 0, 3, 6, ..

st = 'Python'
for i in range(len(st)):
    if i % 3 !=0:
        print(st[i],end='')


print()
print('-7-'*30)


#  Напишите программу, которая заменяет все вхождения цифры 1 на слово «one».

st = '12321'
print(st.replace('1', 'one'))

print('-8-'*30)

# Напишите программу, которая удаляет все вхождения символа «@».
st = '1123@34@12'

print(st.replace('@',''))

print('-9-'*30)


# Напишите программу, которая выводит индекс второго вхождения буквы «f». Если буква «f» встречается только один раз,
# выведите число -1, а если не встречается ни разу, выведите число -2.


st = 'affffectivefff'
st_2_f = st.find('f',st.find('f')+1,len(st))

if 'f' not in st:
    print('-2')

elif st.count('f') == 1:
    print('-1 ')

else:
    print(st_2_f)
   
print('-10-'*30)
# На вход программе подается строка текста в которой буква «h»
# встречается как минимум два раза. Напишите программу, которая 
# возвращает исходную строку и переворачивает последовательность символов,
# заключенную между первым и последним вхождением буквы «h».
#    abch12345h
st = 'abch12345h'

h_start = st.find('h')

h_shinish = st.rfind('h')

print(st[: h_start +1] + st[h_shinish -1 : h_start: -1 ] + st[h_shinish : ])